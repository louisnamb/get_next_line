When you invoke GCC, it normally does 
preprocessing, compilation, assembly and linking. 
The overall 
options allow you to stop this process at an intermediate stage. 
For example, the 
-c option says not to run the linker.T
hen the output 

consists of object files output by the assembler.
aph of this article in it.

The first step in developing the code to read the file is to include the necessary 
headers and create a main() function that returns an empty value. We define the “fd” 
integer in it which serves as the file descriptor, a 1024 character buffer called 
“buff” where the information that is read by the read() function is stored. 
The array path stores the path and the name of the file that we want to read.Welcome to GFG
Static variables date at least to ALGOL 60 (1960), where they are known as own variables:

A declaration may be marked with the additional declarator own. This has the following effect: upon a re-entry into the block, the values of own quantities will be unchanged from their values at the last exit, while the values of declared variables that are not marked with own is undefined.

— Revised report on ALGOL 60, section "5. Declarations", p. 14
This definition is subtly different from a static variable: it only specifies behavior, and hence lifetime, not storage: an own variable can be allocated when a function is first called, for instance, rather than at program load time.

The use of the word static to refer to these variables dates at least to BCPL (1966), and has been popularized by the C programming language, which was heavily influenced by BCPL. The BCPL definition reads:

(1) Static data items:
Those data items whose extents lasts as long as the program execution time; such data items have manifest constant Lvalues. Every static data item must have been declared either in a function or routine definition, in a global declaration or as a label set by colon.

— The BCPL Reference Manual, 7.2 Space Allocation and Extent of Data Items
Note that BCPL defined a "dynamic data item" for what is now called an automatic variable (local, stack-allocated), not for heap-allocated objects, which is the current use of the term dynamic allocation.

The static keyword is used in C and related languages both for static variables and other concepts.